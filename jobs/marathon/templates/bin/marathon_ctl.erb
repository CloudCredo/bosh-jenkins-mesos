#!/bin/bash

set -e
set -u

function setup_bosh_environment() {
  JOB_NAME=marathon
  PID_FILE=/var/vcap/sys/run/$JOB_NAME/marathon.pid
  LOG_DIR=/var/vcap/sys/log/$JOB_NAME
  RUN_DIR=/var/vcap/sys/run/$JOB_NAME
  JOB_DIR=/var/vcap/packages/$JOB_NAME

  mkdir -p $LOG_DIR
  mkdir -p $RUN_DIR
 
  chown --recursive vcap:vcap $LOG_DIR
}

function start_marathon() {
  JAVA_BINARY=/var/vcap/packages/jre/bin/java

  flags=(
    -cp $JOB_DIR/marathon.jar mesosphere.marathon.Main 
    --master zk://<%= p("mesos.zookeeper.ip") %>:<%= p("mesos.zookeeper.port") %>/mesos 
    --zk_hosts <%= p("mesos.zookeeper.ip") %>:<%= p("mesos.zookeeper.port") %> 
  )

  exec chpst -u vcap:vcap \
       $JAVA_BINARY ${flags[*]} \
       1>>$LOG_DIR/$JOB_NAME.stdout.log \
       2>>$LOG_DIR/$JOB_NAME.stderr.log &
 
  echo $! > $PID_FILE
}

function setup_mesos_environment() {
  export MESOS_NATIVE_LIBRARY=/var/vcap/packages/mesos/src/.libs/libmesos.so 
  export LIBPROCESS_IP=<%= spec.networks.send(p('mesos.network')).ip %>
}

function kill_marathon() {
  kill `cat $PID_FILE`
}

function setup_ulimit() {
  ulimit -n 8192
}

case $1 in

  start)
    setup_bosh_environment
    setup_ulimit
    setup_mesos_environment
    start_marathon
    ;; 

  stop)
    kill_marathon
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
